/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BaseImport } from './routes/_base'

// Create Virtual Routes

const RedirectLazyImport = createFileRoute('/redirect')()
const ProfileLazyImport = createFileRoute('/profile')()
const PlayroomsLazyImport = createFileRoute('/playrooms')()
const DealerpanelLazyImport = createFileRoute('/dealerpanel')()
const CallbackLazyImport = createFileRoute('/callback')()
const BaseIndexLazyImport = createFileRoute('/_base/')()
const PlayRoomIdLazyImport = createFileRoute('/play/$roomId')()
const DealerRoomIdLazyImport = createFileRoute('/dealer/$roomId')()
const BaseRoomLazyImport = createFileRoute('/_base/room')()
const BaseGameLazyImport = createFileRoute('/_base/game')()

// Create/Update Routes

const RedirectLazyRoute = RedirectLazyImport.update({
  path: '/redirect',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/redirect.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const PlayroomsLazyRoute = PlayroomsLazyImport.update({
  path: '/playrooms',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/playrooms.lazy').then((d) => d.Route))

const DealerpanelLazyRoute = DealerpanelLazyImport.update({
  path: '/dealerpanel',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dealerpanel.lazy').then((d) => d.Route))

const CallbackLazyRoute = CallbackLazyImport.update({
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/callback.lazy').then((d) => d.Route))

const BaseRoute = BaseImport.update({
  id: '/_base',
  getParentRoute: () => rootRoute,
} as any)

const BaseIndexLazyRoute = BaseIndexLazyImport.update({
  path: '/',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/index.lazy').then((d) => d.Route))

const PlayRoomIdLazyRoute = PlayRoomIdLazyImport.update({
  path: '/play/$roomId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/play.$roomId.lazy').then((d) => d.Route))

const DealerRoomIdLazyRoute = DealerRoomIdLazyImport.update({
  path: '/dealer/$roomId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dealer.$roomId.lazy').then((d) => d.Route),
)

const BaseRoomLazyRoute = BaseRoomLazyImport.update({
  path: '/room',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/room.lazy').then((d) => d.Route))

const BaseGameLazyRoute = BaseGameLazyImport.update({
  path: '/game',
  getParentRoute: () => BaseRoute,
} as any).lazy(() => import('./routes/_base/game.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_base': {
      id: '/_base'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BaseImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackLazyImport
      parentRoute: typeof rootRoute
    }
    '/dealerpanel': {
      id: '/dealerpanel'
      path: '/dealerpanel'
      fullPath: '/dealerpanel'
      preLoaderRoute: typeof DealerpanelLazyImport
      parentRoute: typeof rootRoute
    }
    '/playrooms': {
      id: '/playrooms'
      path: '/playrooms'
      fullPath: '/playrooms'
      preLoaderRoute: typeof PlayroomsLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base/game': {
      id: '/_base/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof BaseGameLazyImport
      parentRoute: typeof BaseImport
    }
    '/_base/room': {
      id: '/_base/room'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof BaseRoomLazyImport
      parentRoute: typeof BaseImport
    }
    '/dealer/$roomId': {
      id: '/dealer/$roomId'
      path: '/dealer/$roomId'
      fullPath: '/dealer/$roomId'
      preLoaderRoute: typeof DealerRoomIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/play/$roomId': {
      id: '/play/$roomId'
      path: '/play/$roomId'
      fullPath: '/play/$roomId'
      preLoaderRoute: typeof PlayRoomIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/_base/': {
      id: '/_base/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof BaseIndexLazyImport
      parentRoute: typeof BaseImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  BaseRoute: BaseRoute.addChildren({
    BaseGameLazyRoute,
    BaseRoomLazyRoute,
    BaseIndexLazyRoute,
  }),
  CallbackLazyRoute,
  DealerpanelLazyRoute,
  PlayroomsLazyRoute,
  ProfileLazyRoute,
  RedirectLazyRoute,
  DealerRoomIdLazyRoute,
  PlayRoomIdLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_base",
        "/callback",
        "/dealerpanel",
        "/playrooms",
        "/profile",
        "/redirect",
        "/dealer/$roomId",
        "/play/$roomId"
      ]
    },
    "/_base": {
      "filePath": "_base.tsx",
      "children": [
        "/_base/game",
        "/_base/room",
        "/_base/"
      ]
    },
    "/callback": {
      "filePath": "callback.lazy.tsx"
    },
    "/dealerpanel": {
      "filePath": "dealerpanel.lazy.tsx"
    },
    "/playrooms": {
      "filePath": "playrooms.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/redirect": {
      "filePath": "redirect.lazy.tsx"
    },
    "/_base/game": {
      "filePath": "_base/game.lazy.tsx",
      "parent": "/_base"
    },
    "/_base/room": {
      "filePath": "_base/room.lazy.tsx",
      "parent": "/_base"
    },
    "/dealer/$roomId": {
      "filePath": "dealer.$roomId.lazy.tsx"
    },
    "/play/$roomId": {
      "filePath": "play.$roomId.lazy.tsx"
    },
    "/_base/": {
      "filePath": "_base/index.lazy.tsx",
      "parent": "/_base"
    }
  }
}
ROUTE_MANIFEST_END */
